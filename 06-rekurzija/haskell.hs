data Tree a =
    Empty
  | Node (Tree a) a (Tree a)

find :: Ord a => a -> Tree a -> Bool
find _ Empty = False
find x (Node l y r) | x == y    = True
find x (Node l y r) | x < y     = find x l
find x (Node l y r) | otherwise = find x r

f :: Integer -> Integer
f x = mod 100 x

g :: Integer -> Integer
g x = 20

-- ghci> g (f 0)
-- 20

enke :: [Integer]
enke = 1 : enke

-- ghci> enke
-- [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
-- ,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
-- ,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,...

odgovor :: Integer
odgovor = sum (take 42 enke)

enDvaTri :: [Integer]
enDvaTri = 1 : 2 : 3 : enDvaTri

-- ghci> enDvaTri
-- [1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1
-- ,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2
-- ,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,...
-- ghci> map (\x -> x * x) enDvaTri
-- [1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1
-- ,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4
-- ,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,4,9,1,...

naravna :: [Integer]
naravna = 0 : map succ naravna

-- ghci> drop 1 [2,3,4,5,6]
-- [3,4,5,6]
-- ghci> zip [1,2,3,4,5] [10,20,30,40]
-- [(1,10),(2,20),(3,30),(4,40)]
-- ghci> (+) 2 20
-- 22
-- ghci> zipWith (+) [1,2,3,4,5] [10,20,30,40]
-- [11,22,33,44]

fib :: [Integer]
fib = 0 : 1 : zipWith (+) fib (drop 1 fib)

-- ghci> take 100 fib
-- [0,1,1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765,10946,17711,28657,46368,75025,121393,196418,317811,514229,832040,1346269,2178309,3524578,5702887,9227465,14930352,24157817,39088169,63245986,102334155,165580141,267914296,433494437,701408733,1134903170,1836311903,2971215073,4807526976,7778742049,12586269025,20365011074,32951280099,53316291173,86267571272,139583862445,225851433717,365435296162,591286729879,956722026041,1548008755920,2504730781961,4052739537881,6557470319842,10610209857723,17167680177565,27777890035288,44945570212853,72723460248141,117669030460994,190392490709135,308061521170129,498454011879264,806515533049393,1304969544928657,2111485077978050,3416454622906707,5527939700884757,8944394323791464,14472334024676221,23416728348467685,37889062373143906,61305790721611591,99194853094755497,160500643816367088,259695496911122585,420196140727489673,679891637638612258,1100087778366101931,1779979416004714189,2880067194370816120,4660046610375530309,7540113804746346429,12200160415121876738,19740274219868223167,31940434634990099905,51680708854858323072,83621143489848422977,135301852344706746049,218922995834555169026]

-- ghci> [1..20]
-- [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
-- ghci> [1,3..20]
-- [1,3,5,7,9,11,13,15,17,19]
-- ghci> filter (\x -> mod x 3 /= 0) [1..40]
-- [1,2,4,5,7,8,10,11,13,14,16,17,19,20,22,23,25,26,28,29,31,32,34,35,37,38,40]

eratosten [] = []
eratosten (x : xs) = x : eratosten (filter (\y -> mod y x /= 0) xs)

prastevila = 2 : eratosten [3,5..]

-- ghci> take 100 prastevila
-- [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541]
